-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.student_student
(
    student_id integer,
    teacher_id integer,
    student_name character varying(20) COLLATE pg_catalog."default",
    grade character varying(20) COLLATE pg_catalog."default",
    class_start_date date,
    city_id integer
);

CREATE TABLE IF NOT EXISTS public.date_date
(
    date date,
    year integer,
    quarter character varying(20) COLLATE pg_catalog."default",
    month character varying(20) COLLATE pg_catalog."default"
);

CREATE TABLE IF NOT EXISTS public.city_region
(
    city_id integer,
    city character varying(20) COLLATE pg_catalog."default",
    state character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT city_region_city_id_key UNIQUE (city_id)
);

CREATE TABLE IF NOT EXISTS public.topic_topic
(
    topic_id integer,
    grade character varying(20) COLLATE pg_catalog."default",
    topic_name character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT topic_topic_topic_id_key UNIQUE (topic_id)
);

CREATE TABLE IF NOT EXISTS public.student_topic
(
    student_id integer,
    topic_id integer,
    test_cleared boolean,
    percentage_mark bigint,
    test_date date
);

ALTER TABLE IF EXISTS public.date_date
    ADD FOREIGN KEY (date)
    REFERENCES public.student_student (class_start_date) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.city_region
    ADD FOREIGN KEY (city_id)
    REFERENCES public.student_student (city_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.student_topic
    ADD FOREIGN KEY (student_id)
    REFERENCES public.student_student (student_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.student_topic
    ADD FOREIGN KEY (topic_id)
    REFERENCES public.topic_topic (topic_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;